namespace Tea2D.Vulkan.Generator;

public sealed class SourceFileWriter : ISourceWriter
{
    private const string TabString = "    ";
        
    private static readonly string[] IndentStrings = new string[10];
        
    private readonly StreamWriter _writer;

    private int _indentCount;
    private string _indentString = string.Empty; 

    static SourceFileWriter()
    {
        for (var i = 0; i < IndentStrings.Length; i++)
        {
            IndentStrings[i] = string.Concat(Enumerable.Repeat(TabString, i));
        }
    }
        
    public SourceFileWriter(string filename, params string[] namespaces)
    {
        _writer = File.CreateText(filename);
        WriteLine("// ============================================================================ ");
        WriteLine("// This file is generated by Tea2D.Vulkan.Generator tool. ");
        WriteLine("// ============================================================================ ");
        WriteLine();

        foreach (var @namespace in namespaces)
        {
            WriteLine($"using {@namespace};");
        }

        WriteLine();
    }

    public IDisposable BeginBlock(string prefix)
    {
        WriteLine(prefix);

        return new CodeBlock(this);
    }

    private void IncIndent()
    {
        _indentString = IndentStrings[++_indentCount];
    }

    private void DecIndent()
    {
        _indentString = IndentStrings[--_indentCount];
    }

    public void Write(char symbol)
    {
        _writer.Write(_indentString);
        _writer.Write(symbol);
    }
        
    public void Write(string str)
    {
        _writer.Write(_indentString);
        _writer.Write(str);
    }
        
    public void WriteLine(char symbol)
    {
        _writer.Write(_indentString);
        _writer.WriteLine(symbol);
    }

    public void WriteLine(string str)
    {
        _writer.Write(_indentString);
        _writer.WriteLine(str);
    }
        
    public void WriteLine() => _writer.WriteLine();

    public void Dispose()
    {
        _writer.Dispose();
    }
        
    private class CodeBlock : IDisposable
    {
        private readonly SourceFileWriter _writer;
            
        public CodeBlock(SourceFileWriter writer)
        {
            _writer = writer;
            _writer.WriteLine('{');
            _writer.IncIndent();
        }
            
        public void Dispose()
        {
            _writer.DecIndent();
            _writer.WriteLine('}');
        }
    }
}